// This file has been autogenerated from a class added in the UI designer.
// This file has been autogenerated from a class added in the UI designer.

using System;
using AVFoundation;
using CoreGraphics;
using Foundation;
using MediaPlayer;
using MvvmCross.Binding.BindingContext;
using MvvmCross.Binding.iOS.Views;
using MvvmCross.iOS.Views;
using MvvmCross.iOS.Views.Presenters.Attributes;
using SuspilneKazky.iOS.ViewCells;
using SuspilneKazky.Models;
using SuspilneKazky.ViewModels;
using UIKit;

namespace SuspilneKazky.iOS
{
    public class NewsFlowLayoutCollectionViewSource : MvxCollectionViewSource, IUICollectionViewDelegateFlowLayout
    {
        public NewsFlowLayoutCollectionViewSource(UICollectionView collectionView, NSString defaultCellIdentifier) : base(collectionView, defaultCellIdentifier)
        {

        }

		[Export("collectionView:layout:sizeForItemAtIndexPath:")]
        public CGSize GetSizeForItem(UICollectionView collectionView, UICollectionViewLayout layout, NSIndexPath indexPath)
        {
            var padding = 25;
            var collectionCellSize = collectionView.Frame.Size.Width - padding;
            return new CGSize(width: collectionCellSize / 2, height: collectionCellSize / 2);
        }
    }

    [MvxFromStoryboard("Main")]
    [MvxTabPresentation(WrapInNavigationController = true, TabIconName = "home", TabName = "Stories")]
    public partial class StoriesCollectionViewController : MvxCollectionViewController<StoriesViewModel>
    {
        public StoriesCollectionViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            CollectionView.AlwaysBounceVertical = true;
            CollectionView.RegisterNibForCell(StorySongViewCell.Nib, StorySongViewCell.Key);
            var source = new NewsFlowLayoutCollectionViewSource(CollectionView, StorySongViewCell.Key);
            CollectionView.Source = source;
            var set = this.CreateBindingSet<StoriesCollectionViewController, StoriesViewModel>();
            set.Bind(source).To(vm => vm.Items);
            set.Bind(source).For(x => x.SelectionChangedCommand).To(vm => vm.PlaySongCommand);
            set.Apply();

            CollectionView.ReloadData();

            CollectionView.AllowsSelection = true;

        }
    }
}
